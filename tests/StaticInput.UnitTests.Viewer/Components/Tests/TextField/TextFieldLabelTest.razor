@using System.ComponentModel.DataAnnotations

@inject NavigationManager NavigationManager

<EditForm Model="Model" method="post" OnValidSubmit="OnValidSubmit" FormName="Validate">
    <DataAnnotationsValidator />

    <MudStaticTextField For="@(() => Model.Value)" Label="Adornment Start" Variant="Variant.Outlined" @bind-Value="Model.Value"
                        Class="mb-4" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Abc" />

    <MudStaticTextField For="@(() => Model.Value)" Label="Adornment End" Variant="Variant.Outlined" @bind-Value="Model.Value"
                        Class="mb-4" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Abc" />

    <MudStaticTextField For="@(() => Model.Value)" Label="Shrink Label" Variant="Variant.Outlined" 
                        Class="mb-4" ShrinkLabel="true" @bind-Value="Model.Value" />

    <MudStaticTextField For="@(() => Model.Value)" Label="Placeholder" Variant="Variant.Outlined" @bind-Value="Model.Value"
                        Class="mb-4" Placeholder="Default Text" />

    <MudStaticTextField For="@(() => Model.Value)" Label="Date" Variant="Variant.Outlined" @bind-Value="Model.Value"
                        Class="mb-4" InputType="InputType.Date" />

    <MudStaticTextField For="@(() => Model.Value)" Label="Basic Label" Variant="Variant.Outlined" @bind-Value="Model.Value" />
</EditForm>

@code {
    [SupplyParameterFromForm]
    private TestModel Model { get; set; } = new TestModel();

    private void OnValidSubmit() => NavigationManager.NavigateTo("");

    private sealed class TestModel
    {
        public string Value { get; set; } = string.Empty;
    }
}