@namespace MudBlazor.StaticInput
@typeparam T

@inherits MudTextField<T>

@{
    base.BuildRenderTree(__builder);
}

@code {
    [Parameter] public Expression<Func<string>>? ValueExpression { get; set; }

    private string _name;
    private string _elementId;
    private bool HasDefaultContent => ShrinkLabel || 
                                      HasNativeHtmlPlaceholder() ||
                                      Adornment == Adornment.Start || 
                                      !string.IsNullOrWhiteSpace(Placeholder);

    protected override void OnParametersSet()
    {
        UserAttributes["id"] = _elementId;
        UserAttributes["name"] = _name;

        base.OnParametersSet();
    }

    protected override void OnInitialized()
    {
        _elementId = Guid.NewGuid().ToString()[..8];

        var expression = ValueExpression?.ToString();

        if (!string.IsNullOrEmpty(expression))
        {
            var index = expression.LastIndexOf(").", StringComparison.Ordinal);

            if (index > 0)
            {
                _name = expression[(index + 2)..];       
            }
        }

        base.OnInitialized();
    }

    private bool HasNativeHtmlPlaceholder()
    {
        return InputType is InputType.Color or 
               InputType.DateTimeLocal or
               InputType.Date or
               InputType.Month or 
               InputType.Week or
               InputType.Time;
    }

}

<script>
    (function () {
        const inputElement = document.getElementById('@_elementId');
        const shrinkLabel = @HasDefaultContent.ToString().ToLower();
        const showOnFocus = @HelperTextOnFocus.ToString().ToLower();

        if (inputElement && (!shrinkLabel || showOnFocus)) {
            const parentElement = inputElement.closest(".mud-input-control");
            const helperElement = parentElement ? parentElement.querySelector(".me-auto") : null;

            if (showOnFocus && helperElement) {
                helperElement.style.visibility = "hidden";

                inputElement.addEventListener('focus', function () {
                    helperElement.style.visibility = "visible";
                });
            }

            inputElement.addEventListener('blur', function (event) {
                if (!shrinkLabel) {
                    const emptyValue = event.target.value.length === 0;
                    const targetParent = event.target.parentElement;

                    targetParent.classList.toggle("mud-shrink", !emptyValue);
                }

                if (helperElement) {
                    helperElement.style.visibility = "hidden";
                }
            });
        }
    })();
</script>